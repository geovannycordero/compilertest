COMPILER Sample

public SymbolTable tab;
//public CodeGenerator gen;

CHARACTERS
	digit = '0'..'9'.
	letter = 'A'..'Z' + 'a'..'z'.

TOKENS
	var = letter {letter | digit | '_'}.
	number = ['-'] digit {digit}.

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO '\r' '\n'

IGNORE '\r' + '\n' + '\t'

PRODUCTIONS
	
	Sample								(. tab = new SymbolTable(); .)
	= Statement {Prints}
	.

	Statement							(. int nVars, nIn; .)
	=
	Variables<out nVars>
	'='
	Method<out nIn>
	';'									(. if(nVars != nIn) SemErr("El par'ametro no coincide con el n'umero de variables indicado.");.)
	.

	Variables<out int numVars>			(. numVars = 0; String vName, vName0; .)
	=
	VarName<out vName0>					(. numVars++; tab.insert(t.val); .)
	{ ',' 
	VarName<out vName>					(. 
										if(tab.find(t.val) != null){ SemErr("Nombre de variable " + t.val + " ya existe.");}
										else{ tab.insert(t.val); numVars++; }
										.)
	}
	.

	VarName<out String varName>
	= 
	var									(. varName = t.val; .)
	.
	
	Method<out int n>					(. n = 0; .)
	=
	"metodo"
	'('
	number								(.
										try{ n = Integer.parseInt(t.val); } catch(Exception e){}
										if(n > 6 || n < 1) SemErr("El par'ametro debe ser mayor a cero y menor a seis.");
										.)
	')'
	.

	Prints
	=
	"print"
	var									(. if(tab.find(t.val) == null) SemErr("Variable " + t.val + " no existe."); .)
	';'
	.

END Sample.

